@page "/SavedSudokus"

@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@using Sudoku.App.Models
@inject ISudokuRepository SudokuRepository
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h3>SavedSudokus</h3>

<div class="row">
    @foreach (var board in _userBoards)
    {
        <div class="col-6 board">
            <NavLink href="@($"/solve/{board.Id}")">
                <ReadonlySudokuBoard Board="board.Board" />
            </NavLink>
        </div>
    }
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }
    
    List<SudokuWithId> _userBoards = [];

    protected override async Task OnInitializedAsync()
    {
        if (AuthState is null)
            NavigationManager.NavigateTo("/");
        else
        {
            var authState = await AuthState;
            var user = authState.User;
            var id = user.Claims.First(c => c.Type == ClaimTypes.NameIdentifier).Value;
            
            _userBoards = await SudokuRepository.GetUserSudoku(id);
        }
    }

}