@page "/SavedSudokus"

@using Microsoft.AspNetCore.Authorization
@using Sudoku.App.Helpers
@using System.Security.Claims
@using Sudoku.App.Models
@inject ISudokuRepository SudokuRepository
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@attribute [Authorize]

<h3>SavedSudokus</h3>

<div class="row">
    @foreach (var board in _userBoards)
    {
        <NavLink class="col-6" href="@($"/solve/{board.Id}")">
            <SudokuBoard Board="board.Board" />
        </NavLink>
    }
</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }
    
    List<SudokuWithId> _userBoards = [];

    protected override async Task OnInitializedAsync()
    {
        if (AuthState is null)
            NavigationManager.NavigateTo("/");
        else
        {
            var authState = await AuthState;
            var user = authState.User;
            var id = user.Claims.First(c => c.Type == ClaimTypes.NameIdentifier).Value;

            foreach (var board in await SudokuRepository.GetUserSudoku(id))
            {
                Console.WriteLine(board.Board[0, 0].Value);
            }
            
            _userBoards.AddRange(await SudokuRepository.GetUserSudoku(id));
        }
    }

}